let rgx_var_init=/^[a-zA-Z]+[\w]*[ \t]*:[ \t]*[a-zA-Z]+[\w]*[ \t]*=/g,rgx_var_reas=/^[a-zA-Z]+[\w]*[ \t]*=/g,rgx_var=/[a-zA-Z]+[\w]*/,rgx_vec=/^[a-zA-Z]+[\w]*[ \t]*\[.+\]/,rgx_vect_reas=/[a-zA-Z]+[\w]*[ \t]*\[.+\][ \t]*=/,rgx_vect_init=/^[ \t]*[\w]+[ \t]*:[ \t]*[\w]+[ \t]*\[[ \t]*[\w]+[ \t]*\][ \t]*$/,rgx_vect_malloc=/^[ \t]*(cuda[ \t]+)*[\w]+[ \t]*:[ \t]*[\w]+[ \t]*=[ \t]*\[[ \t]*[\w]+[ \t]*\][ \t]*$/,variables={},used_var=[],vectors={heap:{name:[],type:[],size:[]},stack:{name:[],type:[],size:[]}},cuda_vectors={name:[],type:[],size:[]},error="",gbl_evaluable="",warnings=[],global_index=0,data_types=["char","bool","int","float","double","number"],rgx_free_all=/^[ \t]*free_all[ \t]*\([ \t]*\)[ \t]*$/g,rgx_cuda_free_all=/^[ \t]*cuda_free_all[ \t]*\([ \t]*\)[ \t]*$/g,rgx_free=/^[ \t]*free[ \t]*\([ \t]*\w+[ \t]*\)[ \t]*$/g,rgx_memcpy=/^[ \t]*copy[ \t]*\([ \t]*\w+[ \t]*,[ \t]*\w+[ \t]*\)[ \t]*$/,rgx_d2h=/^[ \t]*d2h[ \t]*\([ \t]*\w+[ \t]*,[ \t]*\w+[ \t]*\)[ \t]*$/,rgx_h2d=/^[ \t]*h2d[ \t]*\([ \t]*\w+[ \t]*,[ \t]*\w+[ \t]*\)[ \t]*$/,rgx_zeros=/^[ \t]*zeros[ \t]*\([ \t]*\w+[ \t]*\)[ \t]*$/,rgx_cuda_zeros=/^[ \t]*cuda_zeros[ \t]*\([ \t]*\w+[ \t]*\)[ \t]*$/,rgx_d1dn=/^[ \t]*d[1]d[123][ \t]*\([ \t]*[ \w]+[ \t]*\)[ \t]*$/g,rgx_dndn=/^[ \t]*d[123]d[123][BT][ \t]*\([ \t]*[ \w]+[ \t]*\)[ \t]*$/g,rgx_open=/^[ \t]*<[ \t]*bismillah[ \t]*>$/g,rgx_close=/^[ \t]*<\/[ \t]*bismillah[ \t]*>$/g,bismillah_translate=!1,rgx_end=/^[ \t]*end[ \t]*\([ \t]*\)[ \t]*$/;document.getElementById("open_file").addEventListener("change",function(){let f=document.getElementById("open_file"),b=f.value,c=/(\.bs)$/i;if(!c.exec(b))return document.getElementById("invalid_file").removeAttribute("hidden"),document.getElementById("translation_success").setAttribute("hidden",!0),document.getElementById("up_file").setAttribute("hidden",!0),f.value="",!1;else{let c=new FileReader;c.onload=function(){document.getElementById("bismillah_raw").textContent=this.result,document.getElementById("translate").removeAttribute("hidden")},c.readAsText(this.files[0])}});function get_raw_code(){return raw_code=document.getElementById("bismillah_raw").value.split("\n")}function separate_code_lines(d){let b=d.split("");for(let c=0;c<b.length;c++)"="==b[c]?"="==b[c+1]?(b[c]=" == ",b[c+1]="",c+=2):b[c]=" = ":"!"==b[c]?"="==b[c+1]?(b[c]=" != ",b[c+1]="",c+=2):b[c]=" ! ":">"==b[c]?"="==b[c+1]?(b[c]=" >= ",b[c+1]="",c+=2):b[c]=" > ":"<"==b[c]?"="==b[c+1]?(b[c]=" <= ",b[c+1]="",c+=2):b[c]=" < ":"*"==b[c]?"*"==b[c+1]?(b[c]=" ** ",b[c+1]="",c+=2):b[c]=" * ":"+"==b[c]?b[c]=" + ":"-"==b[c]?b[c]=" - ":"*"==b[c]?b[c]=" * ":"/"==b[c]?b[c]=" / ":"^"==b[c]?b[c]=" ^ ":":"==b[c]?b[c]=" : ":"("==b[c]?b[c]=" ( ":")"==b[c]?b[c]=" ) ":"\t"==b[c]?b[c]="":!1==isNaN(b[c])&&" "==b[c+1]&&(b[c]+=" ",b[c+1]="");return b.join("").trim()}function remove_empty_elements(f){let b=[],c=f.split(" ");for(e in c)""!=c[e]&&(e==c.length-1?b.push(c[e]):b.push(`${c[e]} `));return b.join("")}function format_vector(d){let b=d.split(" ");for(let c=0;c<b.length;c++)/^[a-zA-Z]+[\w]*$/.test(b[c])&&/^\[.+\]$/.test(b[c+1])&&(b[c]+=b[c+1],b[c+1]="");return b.join(" ").trim()}function compress_vector(h){let b=h.split(""),c=!1,i=0,j=0;for(let d=0;d<b.length;d++)"["==b[d]&&(i++,c=!0),"]"==b[d]&&j++,c&&" "==b[d]&&(b[d]=""),0==i-j&&(c=!1);return 0==i-j?b.join(""):(error=`${global_index+1}: there seems to be an error with the square brackets`,"ERROR")}function full_format(){let d=get_raw_code(),b={formatted:[],raw:d};for(line of d)b.formatted.push(remove_empty_elements(format_vector(compress_vector(remove_empty_elements(separate_code_lines(line))))));return b}function reset_error(){error=""}function save_warning(c){warnings.push(c)}function reset_warnings(){warnings=[]}evaluate=function(sentence){let splitted=sentence.split(" "),cpp=[];for(e in splitted)if("and"==splitted[e])splitted[e]="&&",cpp.push("&&");else if("or"==splitted[e])splitted[e]="||",cpp.push("||");else if("not"==splitted[e])splitted[e]="!",cpp.push("!");else if("mod"==splitted[e])splitted[e]="%",cpp.push("%");else if(rgx_vec.test(splitted[e]))used_var.push(sentence.match(rgx_var)[0]),save_warning(`${global_index+1}: "${splitted[e]}" might have an incorrect index`),cpp.push(splitted[e]),splitted[e]=9999999;else if(rgx_var.test(splitted[e])){if(/^\[.+\]$/.test(splitted[e]))return error=`${global_index+1}: value assignment failed`,"ERROR";var_exist(splitted[e])||(used_var.push(splitted[e]),save_warning(`${global_index+1}: "${splitted[e]}" might not exist`)),cpp.push(splitted[e]),splitted[e]=999999}else cpp.push(splitted[e]);let to_be_evaluated=splitted.join(" ").trim();gbl_evaluable=cpp.join(" ").trim();try{let evaluated=eval(to_be_evaluated);if("boolean"==typeof evaluated)return"BOOLEAN";if("number"==typeof evaluated)return Number.isInteger(evaluated)?"INTEGER":isNaN(evaluated)?"ERROR":evaluated==1/0?"ERROR":"FLOAT"}catch{return error=`${global_index+1}: failed assignment`,"ERROR"}},reset_evaluable=function(){gbl_evaluable=""},get_d1dn=function(g){let b=/\w+/g,c=g.match(b)[0],d=g.match(b)[1];return c.endsWith("d1")?`int ${d} = blockIdx.x * blockDim.x + threadIdx.x;`:c.endsWith("d2")?`int ${d} = blockIdx.x * blockDim.x * blockDim.y + threadIdx.y * blockDim.x + threadIdx.x;`:c.endsWith("d3")?`int ${d} = blockIdx.x * blockDim.x * blockDim.y * blockDim.z + threadIdx.z * blockDim.y * blockDim.x + threadIdx.y * blockDim.x + threadIdx.x;`:void 0},get_dndn=function(g){let b=/\w+/g,c=g.match(b)[0],d=g.match(b)[1];if(c.startsWith("d2")){if(c.endsWith("d1B"))return`int ${d} = blockIdx.y * gridDim.x + blockIdx.x;`;if(c.endsWith("d1T"))return`int ${d} = blockId * blockDim.x + threadIdx.x;`;if(c.endsWith("d2B"))return`int ${d} = blockIdx.x + blockIdx.y * gridDim.x;`;if(c.endsWith("d2T"))return`int ${d} = blockId * (blockDim.x * blockDim.y) + (threadIdx.y * blockDim.x) + threadIdx.x;`;if(c.endsWith("d3B"))return`int ${d} = blockIdx.x + blockIdx.y * gridDim.x;`;if(c.endsWith("d3T"))return`int ${d} = blockId * (blockDim.x * blockDim.y * blockDim.z)  + (threadIdx.z * (blockDim.x * blockDim.y)) + (threadIdx.y * blockDim.x) + threadIdx.x;`}else if(c.startsWith("d3")){if(c.endsWith("d1B"))return`int ${d} = blockIdx.x + blockIdx.y * gridDim.x + gridDim.x * gridDim.y * blockIdx.z;`;if(c.endsWith("d1T"))return`int ${d} = blockId * blockDim.x + threadIdx.x;`;if(c.endsWith("d2B"))return`int ${d} = blockIdx.x + blockIdx.y * gridDim.x + gridDim.x * gridDim.y * blockIdx.z;`;if(c.endsWith("d2T"))return`int ${d} = blockId * (blockDim.x * blockDim.y) + (threadIdx.y * blockDim.x) + threadIdx.x;`;if(c.endsWith("d3B"))return`int ${d} = blockIdx.x + blockIdx.y * gridDim.x + gridDim.x * gridDim.y * blockIdx.z;`;if(c.endsWith("d3T"))return`int ${d} = blockId * (blockDim.x * blockDim.y * blockDim.z) + (threadIdx.z * (blockDim.x * blockDim.y)) + (threadIdx.y * blockDim.x)  + threadIdx.x;`}},memcpy=function(j){let b=/\w+/g,c=j.match(b)[1],d=j.match(b)[2],f="",k="",l="";if(0>(vector_exist(c)||cuda_vectors.name.indexOf(c))&&(used_var.push(c),save_warning(`${global_index+1}: "${c}" might not exist`)),0<=vectors.stack.name.indexOf(d))f=vectors.stack.name[vectors.stack.name.indexOf(d)],k=vectors.stack.type[vectors.stack.name.indexOf(d)],l=vectors.stack.size[vectors.stack.name.indexOf(d)];else if(0<=vectors.heap.name.indexOf(d))f=vectors.heap.name[vectors.heap.name.indexOf(d)],k=vectors.heap.type[vectors.heap.name.indexOf(d)],l=vectors.heap.size[vectors.heap.name.indexOf(d)];else return error=`${global_index+1}: bismillah must know "${d}" length`,"ERROR";return`memcpy(${f}, ${c}, ${l} * sizeof(${k}));`},zeros=function(h){let b=/\w+/g,c=h.match(b)[1],d="",i="";if(0<=vectors.stack.name.indexOf(c))d=vectors.stack.size[vectors.stack.name.indexOf(c)],i=vectors.stack.type[vectors.stack.name.indexOf(c)];else if(0<=vectors.heap.name.indexOf(c))d=vectors.heap.size[vectors.heap.name.indexOf(c)],i=vectors.heap.type[vectors.heap.name.indexOf(c)];else return error=`${global_index+1}: bismillah must know "${c}" length`,"ERROR";return`memset(${c}, 0, ${d} * sizeof(${i}));`},d2h=function(j){let b=/\w+/g,c=j.match(b)[1],d=j.match(b)[2],f="",k="",l="";if(!vector_exist(c)&&0>cuda_vectors.name.indexOf(c)&&(used_var.push(c),save_warning(`${global_index+1}: "${c}" might not exist`)),0<=vectors.stack.name.indexOf(d))f=vectors.stack.name[vectors.stack.name.indexOf(d)],k=vectors.stack.type[vectors.stack.name.indexOf(d)],l=vectors.stack.size[vectors.stack.name.indexOf(d)];else if(0<=vectors.heap.name.indexOf(d))f=vectors.heap.name[vectors.heap.name.indexOf(d)],k=vectors.heap.type[vectors.heap.name.indexOf(d)],l=vectors.heap.size[vectors.heap.name.indexOf(d)];else if(0<=cuda_vectors.name.indexOf(d))f=cuda_vectors.name[cuda_vectors.name.indexOf(d)],k=cuda_vectors.type[cuda_vectors.name.indexOf(d)],l=cuda_vectors.size[cuda_vectors.name.indexOf(d)];else return error=`${global_index+1}: bismillah must know "${d}" length`,"ERROR";return`cudaMemcpy(${f}, ${c}, ${l} * sizeof(${k}), cudaMemcpyDeviceToHost);`},h2d=function(j){let b=/\w+/g,c=j.match(b)[1],d=j.match(b)[2],f="",k="",l="";if(!vector_exist(c)&&0>cuda_vectors.name.indexOf(c)&&(used_var.push(c),save_warning(`${global_index+1}: "${c}" might not exist`)),0<=vectors.stack.name.indexOf(d))f=vectors.stack.name[vectors.stack.name.indexOf(d)],k=vectors.stack.type[vectors.stack.name.indexOf(d)],l=vectors.stack.size[vectors.stack.name.indexOf(d)];else if(0<=vectors.heap.name.indexOf(d))f=vectors.heap.name[vectors.heap.name.indexOf(d)],k=vectors.heap.type[vectors.heap.name.indexOf(d)],l=vectors.heap.size[vectors.heap.name.indexOf(d)];else if(0<=cuda_vectors.name.indexOf(d))f=cuda_vectors.name[cuda_vectors.name.indexOf(d)],k=cuda_vectors.type[cuda_vectors.name.indexOf(d)],l=cuda_vectors.size[cuda_vectors.name.indexOf(d)];else return error=`${global_index+1}: bismillah must know "${d}" length`,"ERROR";return`cudaMemcpy(${f}, ${c}, ${l} * sizeof(${k}), cudaMemcpyHostToDevice);`},cuda_zeros=function(h){let b=/\w+/g,c=h.match(b)[1],d="",i="";if(0<=cuda_vectors.name.indexOf(c))i=cuda_vectors.type[cuda_vectors.name.indexOf(c)],d=cuda_vectors.size[cuda_vectors.name.indexOf(c)];else return error=`${global_index+1}: "${c}" might not be a CUDA vector`,"ERROR";return`cudaMemset(${c}, 0, ${d} * sizeof(${i}));`},free_all=function(){let d="";for(let b of vectors.stack.name)d+=`free(${b});\n`;return vectors.stack.name=[],vectors.stack.type=[],vectors.stack.size=[],d},free=function(f){let b=f.match(/\w+/g)[1],c=vectors.stack.name.indexOf(b);return 0>c?save_warning(`${global_index+1}: "${b}" might not exist`):free_swap(c),`free(${b});`},free_swap=function(h){let b=vectors.stack.name.length-1,c=vectors.stack.name[b],d=vectors.stack.type[b],f=vectors.stack.size[b];vectors.stack.name[h]=c,vectors.stack.type[h]=d,vectors.stack.size[h]=f,vectors.stack.name.pop(),vectors.stack.type.pop(),vectors.stack.size.pop()},cuda_free_all=function(){let d="";for(let b of cuda_vectors.name)d+=`cudaFree(${b});\n`;return cuda_vectors.name=[],cuda_vectors.type=[],cuda_vectors.size=[],d},reset_dt=function(){data_types=["char","bool","int","float","double","number"]},add_dt=function(){a},save_var=function(h){let b=h.match(/\w+/g)[0],c=h.match(/\w+/g)[1];if(vector_exist(b)||0<=cuda_vectors.name.indexOf(b)||var_exist(b))return error=`${global_index+1}: "${b}" already exists`,`ERROR`;else{let d=get_value(h);if(""==d)return error=`${global_index+1}: value assignment required`,"ERROR";let f=evaluate(d);return 0<=used_var.indexOf(b)?(error=`${global_index+1}: "${b}" used before been initialized`,"ERROR"):"ERROR"==f?"ERROR":(variables.name.push(b),variables.type.push(c),`${c} ${b} = ${gbl_evaluable};`)}},save_var_reas=function(g){let b=g.match(/\w+/g)[0],c=get_value(g),d=evaluate(c);return""==c?(error=`${global_index+1}: value assignment required`,"ERROR"):"ERROR"==d?"ERROR":(var_exist(b)||(used_var.push(b),save_warning(`${global_index+1}: "${b}" might not exist`)),`${b} = ${gbl_evaluable};`)},get_value=function(g){let b=g.split(" "),c=b.indexOf("=")+1,d="";for(let f=c;f<b.length;f++)d+=`${b[f]} `;return d.trim()},save_vect_reas=function(h){let b=h.match(rgx_var)[0],c=get_value(h);if(""==c)return error=`${global_index+1}: value assignment required`,"ERROR";let d=evaluate(c),f=get_sqrt_brt(h);return"ERROR"==d?"ERROR":(vector_exist(b)||(used_var.push(b),save_warning(`${global_index+1}: "${b}" might not exist`)),save_warning(`${global_index+1}: "${b}${f}" might have an incorrect index`),`${b}${f} = ${gbl_evaluable};`)},save_vector=function(h){let b=/\w+/g,c=h.match(b)[0],d=h.match(b)[1],f=h.match(b)[2];return vector_exist(c)||0<=cuda_vectors.name.indexOf(c)||var_exist(c)?(error=`${global_index+1}: "${c}" already exists`,"ERROR"):c==f||0<=used_var.indexOf(c)?(error=`${global_index+1}: "${c}" used before been initialized`,"ERROR"):(used_var.push(f),"number"===d?(vectors.heap.type.push("float"),vectors.heap.name.push(c),vectors.heap.size.push(f),`float ${c}[${f}];`):(vectors.heap.type.push(d),vectors.heap.name.push(c),vectors.heap.size.push(f),`${d} ${c}[${f}];`))},save_malloc=function(h){let b=/\w+/g,c="",i="",j="";return(h.startsWith("cuda")?(c=h.match(b)[1],i=h.match(b)[2],j=h.match(b)[3]):(c=h.match(b)[0],i=h.match(b)[1],j=h.match(b)[2]),vector_exist(c)||0<=cuda_vectors.name.indexOf(c)||var_exist(c))?(error=`${global_index+1}: "${c}" already exists`,"ERROR"):c==j||0<=used_var.indexOf(c)?(error=`${global_index+1}: "${c}" used before been initialized`,"ERROR"):(used_var.push(j),h.startsWith("cuda")?"number"===i?(cuda_vectors.type.push("float"),cuda_vectors.name.push(c),cuda_vectors.size.push(j),`float *${c};\ncudaMalloc((void **)&${c}, ${j} * sizeof(float));`):(cuda_vectors.type.push(i),cuda_vectors.name.push(c),cuda_vectors.size.push(j),`${i} *${c};\ncudaMalloc((void **)&${c}, ${j} * sizeof(${i}));`):"number"===i?(vectors.stack.type.push("float"),vectors.stack.name.push(c),vectors.stack.size.push(j),`float *${c} = (float *) malloc(${j} * sizeof(float));`):(vectors.stack.type.push(i),vectors.stack.name.push(c),vectors.stack.size.push(j),`${i} *${c} = (${i} *) malloc(${j} * sizeof(${i}));`))},vector_exist=function(c){return!!(0<=vectors.stack.name.indexOf(c)||0<=vectors.heap.name.indexOf(c))},get_sqrt_brt=function(c){let b=c.split("=")[0],d="",i=!1;for(let f of b)"["==f&&(i=!i),i&&(d+=f);return d.trim()},var_exist=function(c){return!(0>variables.name.indexOf(c))},reset_vars=function(){variables.name=[],variables.type=[]},reset_used=function(){used_var=[]},reset_vectors=function(){vectors.heap.name=[],vectors.heap.type=[],vectors.heap.size=[],vectors.stack.name=[],vectors.stack.type=[],vectors.stack.size=[]},reset_cuda_vectors=function(){cuda_vectors.name=[],cuda_vectors.type=[],cuda_vectors.size=[]},download=function(d){let b=document.createElement("a");b.style.display="none",b.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(d)),b.setAttribute("download","kernel.cu"),document.body.appendChild(b),b.click(),document.body.removeChild(b)},document.getElementById("translate").addEventListener("click",function(){TODO()}),TODO=function(){return console.clear(),reset(),loop()},loop=function(){let f=full_format(),b=[];for(print_all=function(){console.log("Warnings:"),console.log(warnings),console.log(error),console.log("Translated:"),console.log(b)},global_index=0;global_index<f.formatted.length;global_index++){let c="";if(f.raw[global_index].match(rgx_open)?c=open():f.raw[global_index].match(rgx_close)?c=close():f.formatted[global_index].match(rgx_vect_init)&&bismillah_translate?c=save_vector(f.formatted[global_index]):f.formatted[global_index].match(rgx_vect_malloc)&&bismillah_translate?c=save_malloc(f.formatted[global_index]):f.formatted[global_index].match(rgx_var_init)&&bismillah_translate?c=save_var(f.formatted[global_index]):f.formatted[global_index].match(rgx_var_reas)&&bismillah_translate?c=save_var_reas(f.formatted[global_index]):f.formatted[global_index].match(rgx_vect_reas)&&bismillah_translate?c=save_vect_reas(f.formatted[global_index]):f.formatted[global_index].match(rgx_free_all)&&bismillah_translate?c=free_all():f.formatted[global_index].match(rgx_cuda_free_all)&&bismillah_translate?c=cuda_free_all():f.formatted[global_index].match(rgx_free)&&bismillah_translate?c=free(f.formatted[global_index]):f.formatted[global_index].match(rgx_memcpy)&&bismillah_translate?c=memcpy(f.formatted[global_index]):f.formatted[global_index].match(rgx_d2h)&&bismillah_translate?c=d2h(f.formatted[global_index]):f.formatted[global_index].match(rgx_h2d)&&bismillah_translate?c=h2d(f.formatted[global_index]):f.formatted[global_index].match(rgx_zeros)&&bismillah_translate?c=zeros(f.formatted[global_index]):f.formatted[global_index].match(rgx_cuda_zeros)&&bismillah_translate?c=cuda_zeros(f.formatted[global_index]):f.formatted[global_index].match(rgx_d1dn)&&bismillah_translate?c=get_d1dn(f.formatted[global_index]):f.formatted[global_index].match(rgx_dndn)&&bismillah_translate?c=get_dndn(f.formatted[global_index]):f.formatted[global_index].match(rgx_end)&&bismillah_translate?(end(),c=""):""==f.formatted[global_index]?c="":bismillah_translate?(error=`${global_index+1}: there seems to be an error`,c=`ERROR`):c=f.raw[global_index],"ERROR"==c){print_all();break}b.push(c)}return print_all(),""==error?(document.getElementById("translation_success").removeAttribute("hidden"),document.getElementById("translate").setAttribute("hidden",!0),document.getElementById("up_file").setAttribute("hidden",!0),download(unify_code(b))):(document.getElementById("translate").setAttribute("hidden",!0),document.getElementById("up_file").setAttribute("hidden",!0),document.getElementById("error").removeAttribute("hidden"),document.getElementById("error").innerHTML=`<h1 class="mb-5">\\(o_o)/</h1><p class="mb-2">${error}. <a href="" class="alert-link">Try again!<a></p>`),0!=warnings.length&&(document.getElementById("warning").removeAttribute("hidden"),document.getElementById("warning").innerHTML=get_warning()),b},get_warning=function(){let c=`<h1 class="mb-5">Warnings</h1>`;for(warning of warnings)c+=`<p class="mb-2">${warning}</p>\n`;return c},reset_gi=function(){global_index=0},unify_code=function(f){let b="";for(let c of f)b+=c+"\r\n";return b},open=function(){return bismillah_translate?(error=`${global_index+1}: open tag should be removed`,"ERROR"):(bismillah_translate=!0,"// Bismillah block started")},close=function(){return bismillah_translate?(bismillah_translate=!1,"// Bismillah block ended"):(error=`${global_index+1}: close tag should be removed`,"ERROR")},reset=function(){bismillah_translate=!1,reset_used(),reset_gi(),reset_evaluable(),reset_error(),reset_vars(),reset_vectors(),reset_cuda_vectors(),reset_warnings()},end=function(){reset_used(),reset_evaluable(),reset_vars(),reset_vectors(),reset_cuda_vectors()};