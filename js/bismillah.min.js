let rgx_var_init=/^[a-zA-Z]+[\w]*[ \t]*:[ \t]*[a-zA-Z]+[\w]*[ \t]*=/g,rgx_var_reas=/^[a-zA-Z]+[\w]*[ \t]*=/g,rgx_var=/[a-zA-Z]+[\w]*/,rgx_vec=/^[a-zA-Z]+[\w]*[ \t]*\[.+\]/,rgx_vect_reas=/[a-zA-Z]+[\w]*[ \t]*\[.+\][ \t]*=/,rgx_vect_init=/^[ \t]*[\w]+[ \t]*:[ \t]*[\w]+[ \t]*\[[ \t]*[\w]+[ \t]*\][ \t]*$/,rgx_vect_malloc=/^[ \t]*(cuda[ \t]+)*[\w]+[ \t]*:[ \t]*[\w]+[ \t]*=[ \t]*\[[ \t]*[\w]+[ \t]*\][ \t]*$/,variables={},used_var=[],vectors={heap:{name:[],type:[],size:[]},stack:{name:[],type:[],size:[]}},cuda_vectors={name:[],type:[],size:[]},error="",gbl_evaluable="",warnings=[],global_index=0,data_types=["char","bool","int","float","double","number"],rgx_free_all=/^[ \t]*free_all[ \t]*\([ \t]*\)[ \t]*$/g,rgx_cuda_free_all=/^[ \t]*cuda_free_all[ \t]*\([ \t]*\)[ \t]*$/g,rgx_free=/^[ \t]*free[ \t]*\([ \t]*\w+[ \t]*\)[ \t]*$/g,rgx_memcpy=/^[ \t]*copy[ \t]*\([ \t]*\w+[ \t]*,[ \t]*\w+[ \t]*\)[ \t]*$/,rgx_d2h=/^[ \t]*d2h[ \t]*\([ \t]*\w+[ \t]*,[ \t]*\w+[ \t]*\)[ \t]*$/,rgx_h2d=/^[ \t]*h2d[ \t]*\([ \t]*\w+[ \t]*,[ \t]*\w+[ \t]*\)[ \t]*$/,rgx_zeros=/^[ \t]*zeros[ \t]*\([ \t]*\w+[ \t]*\)[ \t]*$/,rgx_cuda_zeros=/^[ \t]*cuda_zeros[ \t]*\([ \t]*\w+[ \t]*\)[ \t]*$/,rgx_d1dn=/^[ \t]*d[1]d[123][ \t]*\([ \t]*[ \w]+[ \t]*\)[ \t]*$/g,rgx_dndn=/^[ \t]*d[123]d[123][BT][ \t]*\([ \t]*[ \w]+[ \t]*\)[ \t]*$/g,rgx_open=/^[ \t]*<[ \t]*bismillah[ \t]*>$/g,rgx_close=/^[ \t]*<\/[ \t]*bismillah[ \t]*>$/g,bismillah_translate=!1,rgx_end=/^[ \t]*end[ \t]*\([ \t]*\)[ \t]*$/;document.getElementById("open_file").addEventListener("change",function(){let b=document.getElementById("open_file"),c=b.value,d=/(\.bs)$/i;if(!d.exec(c))return document.getElementById("invalid_file").removeAttribute("hidden"),document.getElementById("translation_success").setAttribute("hidden",!0),document.getElementById("up_file").setAttribute("hidden",!0),b.value="",!1;else{let b=new FileReader;b.onload=function(){document.getElementById("bismillah_raw").textContent=this.result,document.getElementById("translate").removeAttribute("hidden")},b.readAsText(this.files[0])}});function get_raw_code(){return raw_code=document.getElementById("bismillah_raw").value.split("\n")}function separate_code_lines(b){let c=b.split("");for(let d=0;d<c.length;d++)"="==c[d]?"="==c[d+1]?(c[d]=" == ",c[d+1]="",d+=2):c[d]=" = ":"!"==c[d]?"="==c[d+1]?(c[d]=" != ",c[d+1]="",d+=2):c[d]=" ! ":">"==c[d]?"="==c[d+1]?(c[d]=" >= ",c[d+1]="",d+=2):c[d]=" > ":"<"==c[d]?"="==c[d+1]?(c[d]=" <= ",c[d+1]="",d+=2):c[d]=" < ":"*"==c[d]?"*"==c[d+1]?(c[d]=" ** ",c[d+1]="",d+=2):c[d]=" * ":"+"==c[d]?c[d]=" + ":"-"==c[d]?c[d]=" - ":"*"==c[d]?c[d]=" * ":"/"==c[d]?c[d]=" / ":"^"==c[d]?c[d]=" ^ ":":"==c[d]?c[d]=" : ":"("==c[d]?c[d]=" ( ":")"==c[d]?c[d]=" ) ":"\t"==c[d]?c[d]="":!1==isNaN(c[d])&&" "==c[d+1]&&(c[d]+=" ",c[d+1]="");return c.join("").trim()}function remove_empty_elements(b){let c=[],d=b.split(" ");for(e in d)""!=d[e]&&(e==d.length-1?c.push(d[e]):c.push(`${d[e]} `));return c.join("")}function format_vector(b){let c=b.split(" ");for(let d=0;d<c.length;d++)/^[a-zA-Z]+[\w]*$/.test(c[d])&&/^\[.+\]$/.test(c[d+1])&&(c[d]+=c[d+1],c[d+1]="");return c.join(" ").trim()}function compress_vector(b){let c=b.split(""),d=!1,f=0,g=0;for(let h=0;h<c.length;h++)"["==c[h]&&(f++,d=!0),"]"==c[h]&&g++,d&&" "==c[h]&&(c[h]=""),0==f-g&&(d=!1);return 0==f-g?c.join(""):(error=`${global_index+1}: there seems to be an error with the square brackets`,"ERROR")}function full_format(){let b=get_raw_code(),c={formatted:[],raw:b};for(line of b)c.formatted.push(remove_empty_elements(format_vector(compress_vector(remove_empty_elements(separate_code_lines(line))))));return c}function reset_error(){error=""}function save_warning(b){warnings.push(b)}function reset_warnings(){warnings=[]}evaluate=function(sentence){let splitted=sentence.split(" "),cpp=[];for(e in splitted)if("and"==splitted[e])splitted[e]="&&",cpp.push("&&");else if("or"==splitted[e])splitted[e]="||",cpp.push("||");else if("not"==splitted[e])splitted[e]="!",cpp.push("!");else if("mod"==splitted[e])splitted[e]="%",cpp.push("%");else if(rgx_vec.test(splitted[e]))used_var.push(sentence.match(rgx_var)[0]),save_warning(`${global_index+1}: "${splitted[e]}" might have an incorrect index`),cpp.push(splitted[e]),splitted[e]=9999999;else if(rgx_var.test(splitted[e])){if(/^\[.+\]$/.test(splitted[e]))return error=`${global_index+1}: value assignment failed`,"ERROR";var_exist(splitted[e])||(used_var.push(splitted[e]),save_warning(`${global_index+1}: "${splitted[e]}" might not exist`)),cpp.push(splitted[e]),splitted[e]=999999}else cpp.push(splitted[e]);let to_be_evaluated=splitted.join(" ").trim();gbl_evaluable=cpp.join(" ").trim();try{let evaluated=eval(to_be_evaluated);if("boolean"==typeof evaluated)return"BOOLEAN";if("number"==typeof evaluated)return Number.isInteger(evaluated)?"INTEGER":isNaN(evaluated)?"ERROR":evaluated==1/0?"ERROR":"FLOAT"}catch{return error=`${global_index+1}: failed assignment`,"ERROR"}},reset_evaluable=function(){gbl_evaluable=""},get_d1dn=function(b){let c=/\w+/g,d=b.match(c)[0],f=b.match(c)[1];if(d.endsWith("d1"))return`int ${f} = blockIdx.x * blockDim.x + threadIdx.x;`;return d.endsWith("d2")?`int ${f} = blockIdx.x * blockDim.x * blockDim.y + threadIdx.y * blockDim.x + threadIdx.x;`:d.endsWith("d3")?`int ${f} = blockIdx.x * blockDim.x * blockDim.y * blockDim.z + threadIdx.z * blockDim.y * blockDim.x + threadIdx.y * blockDim.x + threadIdx.x;`:void 0},get_dndn=function(b){let c=/\w+/g,d=b.match(c)[0],f=b.match(c)[1];if(d.startsWith("d2")){if(d.endsWith("d1B"))return`int ${f} = blockIdx.y * gridDim.x + blockIdx.x;`;if(d.endsWith("d1T"))return`int ${f} = blockId * blockDim.x + threadIdx.x;`;if(d.endsWith("d2B"))return`int ${f} = blockIdx.x + blockIdx.y * gridDim.x;`;if(d.endsWith("d2T"))return`int ${f} = blockId * (blockDim.x * blockDim.y) + (threadIdx.y * blockDim.x) + threadIdx.x;`;if(d.endsWith("d3B"))return`int ${f} = blockIdx.x + blockIdx.y * gridDim.x;`;if(d.endsWith("d3T"))return`int ${f} = blockId * (blockDim.x * blockDim.y * blockDim.z)  + (threadIdx.z * (blockDim.x * blockDim.y)) + (threadIdx.y * blockDim.x) + threadIdx.x;`}else if(d.startsWith("d3")){if(d.endsWith("d1B"))return`int ${f} = blockIdx.x + blockIdx.y * gridDim.x + gridDim.x * gridDim.y * blockIdx.z;`;if(d.endsWith("d1T"))return`int ${f} = blockId * blockDim.x + threadIdx.x;`;if(d.endsWith("d2B"))return`int ${f} = blockIdx.x + blockIdx.y * gridDim.x + gridDim.x * gridDim.y * blockIdx.z;`;if(d.endsWith("d2T"))return`int ${f} = blockId * (blockDim.x * blockDim.y) + (threadIdx.y * blockDim.x) + threadIdx.x;`;if(d.endsWith("d3B"))return`int ${f} = blockIdx.x + blockIdx.y * gridDim.x + gridDim.x * gridDim.y * blockIdx.z;`;if(d.endsWith("d3T"))return`int ${f} = blockId * (blockDim.x * blockDim.y * blockDim.z) + (threadIdx.z * (blockDim.x * blockDim.y)) + (threadIdx.y * blockDim.x)  + threadIdx.x;`}},memcpy=function(b){let c=/\w+/g,d=b.match(c)[1],f=b.match(c)[2],g="",h="",i="";if(0>(vector_exist(d)||cuda_vectors.name.indexOf(d))&&(used_var.push(d),save_warning(`${global_index+1}: "${d}" might not exist`)),0<=vectors.stack.name.indexOf(f))g=vectors.stack.name[vectors.stack.name.indexOf(f)],h=vectors.stack.type[vectors.stack.name.indexOf(f)],i=vectors.stack.size[vectors.stack.name.indexOf(f)];else if(0<=vectors.heap.name.indexOf(f))g=vectors.heap.name[vectors.heap.name.indexOf(f)],h=vectors.heap.type[vectors.heap.name.indexOf(f)],i=vectors.heap.size[vectors.heap.name.indexOf(f)];else return error=`${global_index+1}: bismillah must know "${f}" length`,"ERROR";return`memcpy(${g}, ${d}, ${i} * sizeof(${h}));`},zeros=function(b){let c=/\w+/g,d=b.match(c)[1],f="",g="";if(0<=vectors.stack.name.indexOf(d))f=vectors.stack.size[vectors.stack.name.indexOf(d)],g=vectors.stack.type[vectors.stack.name.indexOf(d)];else if(0<=vectors.heap.name.indexOf(d))f=vectors.heap.size[vectors.heap.name.indexOf(d)],g=vectors.heap.type[vectors.heap.name.indexOf(d)];else return error=`${global_index+1}: bismillah must know "${d}" length`,"ERROR";return`memset(${d}, 0, ${f} * sizeof(${g}));`},d2h=function(b){let c=/\w+/g,d=b.match(c)[1],f=b.match(c)[2],g="",h="",i="";if(!vector_exist(d)&&0>cuda_vectors.name.indexOf(d)&&(used_var.push(d),save_warning(`${global_index+1}: "${d}" might not exist`)),0<=vectors.stack.name.indexOf(f))g=vectors.stack.name[vectors.stack.name.indexOf(f)],h=vectors.stack.type[vectors.stack.name.indexOf(f)],i=vectors.stack.size[vectors.stack.name.indexOf(f)];else if(0<=vectors.heap.name.indexOf(f))g=vectors.heap.name[vectors.heap.name.indexOf(f)],h=vectors.heap.type[vectors.heap.name.indexOf(f)],i=vectors.heap.size[vectors.heap.name.indexOf(f)];else if(0<=cuda_vectors.name.indexOf(f))g=cuda_vectors.name[cuda_vectors.name.indexOf(f)],h=cuda_vectors.type[cuda_vectors.name.indexOf(f)],i=cuda_vectors.size[cuda_vectors.name.indexOf(f)];else return error=`${global_index+1}: bismillah must know "${f}" length`,"ERROR";return`cudaMemcpy(${g}, ${d}, ${i} * sizeof(${h}), cudaMemcpyDeviceToHost);`},h2d=function(b){let c=/\w+/g,d=b.match(c)[1],f=b.match(c)[2],g="",h="",i="";if(!vector_exist(d)&&0>cuda_vectors.name.indexOf(d)&&(used_var.push(d),save_warning(`${global_index+1}: "${d}" might not exist`)),0<=vectors.stack.name.indexOf(f))g=vectors.stack.name[vectors.stack.name.indexOf(f)],h=vectors.stack.type[vectors.stack.name.indexOf(f)],i=vectors.stack.size[vectors.stack.name.indexOf(f)];else if(0<=vectors.heap.name.indexOf(f))g=vectors.heap.name[vectors.heap.name.indexOf(f)],h=vectors.heap.type[vectors.heap.name.indexOf(f)],i=vectors.heap.size[vectors.heap.name.indexOf(f)];else if(0<=cuda_vectors.name.indexOf(f))g=cuda_vectors.name[cuda_vectors.name.indexOf(f)],h=cuda_vectors.type[cuda_vectors.name.indexOf(f)],i=cuda_vectors.size[cuda_vectors.name.indexOf(f)];else return error=`${global_index+1}: bismillah must know "${f}" length`,"ERROR";return`cudaMemcpy(${g}, ${d}, ${i} * sizeof(${h}), cudaMemcpyHostToDevice);`},cuda_zeros=function(b){let c=/\w+/g,d=b.match(c)[1],f="",g="";if(0<=cuda_vectors.name.indexOf(d))g=cuda_vectors.type[cuda_vectors.name.indexOf(d)],f=cuda_vectors.size[cuda_vectors.name.indexOf(d)];else return error=`${global_index+1}: "${d}" might not be a CUDA vector`,"ERROR";return`cudaMemset(${d}, 0, ${f} * sizeof(${g}));`},free_all=function(){let b="";for(let c of vectors.stack.name)b+=`free(${c});\n`;return vectors.stack.name=[],vectors.stack.type=[],vectors.stack.size=[],b},free=function(b){let c=b.match(/\w+/g)[1],d=vectors.stack.name.indexOf(c);return 0>d?save_warning(`${global_index+1}: "${c}" might not exist`):free_swap(d),`free(${c});`},free_swap=function(b){let c=vectors.stack.name.length-1,d=vectors.stack.name[c],f=vectors.stack.type[c],g=vectors.stack.size[c];vectors.stack.name[b]=d,vectors.stack.type[b]=f,vectors.stack.size[b]=g,vectors.stack.name.pop(),vectors.stack.type.pop(),vectors.stack.size.pop()},cuda_free_all=function(){let b="";for(let c of cuda_vectors.name)b+=`free(${c});\n`;return cuda_vectors.name=[],cuda_vectors.type=[],cuda_vectors.size=[],b},reset_dt=function(){data_types=["char","bool","int","float","double","number"]},add_dt=function(){a},save_var=function(b){let c=b.match(/\w+/g)[0],d=b.match(/\w+/g)[1];if(vector_exist(c)||0<=cuda_vectors.name.indexOf(c)||var_exist(c))return error=`${global_index+1}: "${c}" already exists`,`ERROR`;else{let f=get_value(b);if(""==f)return error=`${global_index+1}: value assignment required`,"ERROR";let g=evaluate(f);return 0<=used_var.indexOf(c)?(error=`${global_index+1}: "${c}" used before been initialized`,"ERROR"):"ERROR"==g?"ERROR":(variables.name.push(c),variables.type.push(d),`${d} ${c} = ${gbl_evaluable};`)}},save_var_reas=function(b){let c=b.match(/\w+/g)[0],d=get_value(b),f=evaluate(d);return""==d?(error=`${global_index+1}: value assignment required`,"ERROR"):"ERROR"==f?"ERROR":(var_exist(c)||(used_var.push(c),save_warning(`${global_index+1}: "${c}" might not exist`)),`${c} = ${gbl_evaluable};`)},get_value=function(b){let c=b.split(" "),d=c.indexOf("=")+1,f="";for(let g=d;g<c.length;g++)f+=`${c[g]} `;return f.trim()},save_vect_reas=function(b){let c=b.match(rgx_var)[0],d=get_value(b);if(""==d)return error=`${global_index+1}: value assignment required`,"ERROR";let f=evaluate(d),g=get_sqrt_brt(b);return"ERROR"==f?"ERROR":(vector_exist(c)||(used_var.push(c),save_warning(`${global_index+1}: "${c}" might not exist`)),save_warning(`${global_index+1}: "${c}${g}" might have an incorrect index`),`${c}${g} = ${gbl_evaluable};`)},save_vector=function(b){let c=/\w+/g,d=b.match(c)[0],f=b.match(c)[1],g=b.match(c)[2];return vector_exist(d)||0<=cuda_vectors.name.indexOf(d)||var_exist(d)?(error=`${global_index+1}: "${d}" already exists`,"ERROR"):d==g||0<=used_var.indexOf(d)?(error=`${global_index+1}: "${d}" used before been initialized`,"ERROR"):(used_var.push(g),"number"===f?(vectors.heap.type.push("float"),vectors.heap.name.push(d),vectors.heap.size.push(g),`float ${d}[${g}];`):(vectors.heap.type.push(f),vectors.heap.name.push(d),vectors.heap.size.push(g),`${f} ${d}[${g}];`))},save_malloc=function(b){let c=/\w+/g,d="",f="",g="";return(b.startsWith("cuda")?(d=b.match(c)[1],f=b.match(c)[2],g=b.match(c)[3]):(d=b.match(c)[0],f=b.match(c)[1],g=b.match(c)[2]),vector_exist(d)||0<=cuda_vectors.name.indexOf(d)||var_exist(d))?(error=`${global_index+1}: "${d}" already exists`,"ERROR"):d==g||0<=used_var.indexOf(d)?(error=`${global_index+1}: "${d}" used before been initialized`,"ERROR"):(used_var.push(g),b.startsWith("cuda")?"number"===f?(cuda_vectors.type.push("float"),cuda_vectors.name.push(d),cuda_vectors.size.push(g),`float *${d};\ncudaMalloc((void **)&${d}, ${g} * sizeof(float));`):(cuda_vectors.type.push(f),cuda_vectors.name.push(d),cuda_vectors.size.push(g),`${f} *${d};\ncudaMalloc((void **)&${d}, ${g} * sizeof(${f}));`):"number"===f?(vectors.stack.type.push("float"),vectors.stack.name.push(d),vectors.stack.size.push(g),`float *${d} = (float *) malloc(${g} * sizeof(float));`):(vectors.stack.type.push(f),vectors.stack.name.push(d),vectors.stack.size.push(g),`${f} *${d} = (${f} *) malloc(${g} * sizeof(${f}));`))},vector_exist=function(b){return!!(0<=vectors.stack.name.indexOf(b)||0<=vectors.heap.name.indexOf(b))},get_sqrt_brt=function(b){let d=b.split("=")[0],f="",g=!1;for(let h of d)"["==h&&(g=!g),g&&(f+=h);return f.trim()},var_exist=function(b){return!(0>variables.name.indexOf(b))},reset_vars=function(){variables.name=[],variables.type=[]},reset_used=function(){used_var=[]},reset_vectors=function(){vectors.heap.name=[],vectors.heap.type=[],vectors.heap.size=[],vectors.stack.name=[],vectors.stack.type=[],vectors.stack.size=[]},reset_cuda_vectors=function(){cuda_vectors.name=[],cuda_vectors.type=[],cuda_vectors.size=[]},download=function(b){let c=document.createElement("a");c.style.display="none",c.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(b)),c.setAttribute("download","kernel.cu"),document.body.appendChild(c),c.click(),document.body.removeChild(c)},document.getElementById("translate").addEventListener("click",function(){TODO()}),TODO=function(){return console.clear(),reset(),loop()},loop=function(){let b=full_format(),c=[];for(print_all=function(){console.log("Warnings:"),console.log(warnings),console.log(error),console.log("Translated:"),console.log(c)},global_index=0;global_index<b.formatted.length;global_index++){let d="";if(b.raw[global_index].match(rgx_open)?d=open():b.raw[global_index].match(rgx_close)?d=close():b.formatted[global_index].match(rgx_vect_init)&&bismillah_translate?d=save_vector(b.formatted[global_index]):b.formatted[global_index].match(rgx_vect_malloc)&&bismillah_translate?d=save_malloc(b.formatted[global_index]):b.formatted[global_index].match(rgx_var_init)&&bismillah_translate?d=save_var(b.formatted[global_index]):b.formatted[global_index].match(rgx_var_reas)&&bismillah_translate?d=save_var_reas(b.formatted[global_index]):b.formatted[global_index].match(rgx_vect_reas)&&bismillah_translate?d=save_vect_reas(b.formatted[global_index]):b.formatted[global_index].match(rgx_free_all)&&bismillah_translate?d=free_all():b.formatted[global_index].match(rgx_cuda_free_all)&&bismillah_translate?d=cuda_free_all():b.formatted[global_index].match(rgx_free)&&bismillah_translate?d=free(b.formatted[global_index]):b.formatted[global_index].match(rgx_memcpy)&&bismillah_translate?d=memcpy(b.formatted[global_index]):b.formatted[global_index].match(rgx_d2h)&&bismillah_translate?d=d2h(b.formatted[global_index]):b.formatted[global_index].match(rgx_h2d)&&bismillah_translate?d=h2d(b.formatted[global_index]):b.formatted[global_index].match(rgx_zeros)&&bismillah_translate?d=zeros(b.formatted[global_index]):b.formatted[global_index].match(rgx_cuda_zeros)&&bismillah_translate?d=cuda_zeros(b.formatted[global_index]):b.formatted[global_index].match(rgx_d1dn)&&bismillah_translate?d=get_d1dn(b.formatted[global_index]):b.formatted[global_index].match(rgx_dndn)&&bismillah_translate?d=get_dndn(b.formatted[global_index]):b.formatted[global_index].match(rgx_end)&&bismillah_translate?(end(),d=""):""==b.formatted[global_index]?d="":bismillah_translate?(error=`${global_index+1}: there seems to be an error`,d=`ERROR`):d=b.raw[global_index],"ERROR"==d){print_all();break}c.push(d)}return print_all(),""==error?(document.getElementById("translation_success").removeAttribute("hidden"),document.getElementById("translate").setAttribute("hidden",!0),document.getElementById("up_file").setAttribute("hidden",!0),download(unify_code(c))):(document.getElementById("translate").setAttribute("hidden",!0),document.getElementById("up_file").setAttribute("hidden",!0),document.getElementById("error").removeAttribute("hidden"),document.getElementById("error").innerHTML=`<h1 class="mb-5">\\(o_o)/</h1><p class="mb-2">${error}. <a href="" class="alert-link">Try again!<a></p>`),0!=warnings.length&&(document.getElementById("warning").removeAttribute("hidden"),document.getElementById("warning").innerHTML=get_warning()),c},get_warning=function(){let b=`<h1 class="mb-5">Warnings</h1>`;for(warning of warnings)b+=`<p class="mb-2">${warning}</p>\n`;return b},reset_gi=function(){global_index=0},unify_code=function(b){let c="";for(let d of b)c+=d+"\r\n";return c},open=function(){return bismillah_translate?(error=`${global_index+1}: open tag should be removed`,"ERROR"):(bismillah_translate=!0,"// Bismillah block started")},close=function(){return bismillah_translate?(bismillah_translate=!1,"// Bismillah block started"):(error=`${global_index+1}: close tag should be removed`,"ERROR")},reset=function(){bismillah_translate=!1,reset_used(),reset_gi(),reset_evaluable(),reset_error(),reset_vars(),reset_vectors(),reset_cuda_vectors(),reset_warnings()},end=function(){reset_used(),reset_evaluable(),reset_vars(),reset_vectors(),reset_cuda_vectors()};